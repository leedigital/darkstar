import ContentPanel from"../../../../../ContentPanel.js";import Document from"./Document.js";import Page from"./Page.js";import{UTIL}from"./util/Util.js";export class Board extends Document{#showGrid=!1;#showing=!1;#gridColor="#fff";#tileSizeY=32;#tileSizeX=32;#backgroundColor="#000";#mouse={x:1/0,y:1/0,drag:!1,grabbing:!1};#selectedImageBoard=null;#imagesBoard=[];#page=null;#leftEdge=!1;constructor(e){super(null,e),this.init2(e),Board.documentControl.pop()}show(){this.#showing=!0;this.innerContentElementPanel.appendChild(this.#page.pageElement);const e=this.#page.pageElement.style;e.top=`${this.contentElement.scrollTop}px`,e.left=`${this.contentElement.scrollLeft}px`,this.contentElement.style.overflow="hidden",Board.documentControl.push(this),this.pageManager(this.contentElement)}hide(){if(this.innerContentElementPanel.contains(this.#page.pageElement)){this.#showing=!1,this.innerContentElementPanel.removeChild(this.#page.pageElement),this.contentPanel.reset(),this.contentElement.style.overflow=null,Board.documentControl.pop();const e=Board.currentDocument;e&&e.pageManager(e.contentElement)}}isShowing(){return this.#showing}changeOpacity(e){this.#page.pageElement.style.opacity=""+e/100}resize(e,t){const s=this.#page,i=s.context2dLayer.canvas,o=s.context2d.canvas;o.width=i.width=e||o.width,o.height=i.height=t||o.height,this.changeBackgroundColor(this.#backgroundColor),this.isShowing()&&this.currentPage.update()}showGrid(){this.#showGrid=!0;const e=this.#page.context2d,t=e.canvas,s=t.width,i=t.height;e.save(),e.fillRect(0,0,s,i),e.strokeStyle=this.#gridColor,e.lineWidth=.3;const o=this.#tileSizeY,n=this.#tileSizeX;for(let t=0,n=i/o,a=0;t<n;t++,a+=o)e.beginPath(),e.moveTo(0,a),e.lineTo(s,a),e.closePath(),e.stroke();for(let t=0,o=s/n,a=0;t<o;t++,a+=n)e.beginPath(),e.moveTo(a,0),e.lineTo(a,i),e.closePath(),e.stroke();e.restore(),this.drawImage()}hideGrid(){this.#showGrid=!1;const e=this.#page.context2d,t=e.canvas;e.fillRect(0,0,t.width,t.height),this.drawImage()}isShowingGrid(){return this.#showGrid}changeGridColor(e){this.#gridColor=e,this.update2()}changeGridSize(e,t){this.#tileSizeX=e||this.#tileSizeX,this.#tileSizeY=t||this.#tileSizeY,this.update2()}changeBackgroundColor(e){const t=this.#page.context2d,s=t.canvas;this.#backgroundColor=e,t.fillStyle=e,t.fillRect(0,0,s.width,s.height),this.update2()}init2(e){const t=this.pages,s=this;s.pageStartElement.min=1,s.pageStartElement.max=1;const i=this.#page=new Page(s,{pageNumber:s.pageNumber,pageIndex:s.pageIndex,getViewport:()=>({width:3072,height:2304}),render(e){e.canvasContext.fillRect(0,0,3072,2304)}});i.title=s.title,t.push(i),i.render(3),UTIL.hiddenProgressBar(),i.restore(),document.addEventListener("mousemove",(e=>this.mouseMove(e))),document.addEventListener("dblclick",(e=>this.doubleClick(e))),document.addEventListener("mouseup",(e=>this.mouseUp(e))),document.addEventListener("mouseleave",(e=>this.mouseUp(e))),document.addEventListener("mousedown",(e=>this.mouseDown(e))),document.addEventListener("keydown",(e=>this.keyDow(e))),document.addEventListener("keyup",(e=>this.keyUp(e))),this.contentElement.addEventListener("scroll",(e=>this.scroll(e)));const o=this.#page.pageElement.style;o.position="absolute",o.zIndex="999"}get currentPage(){return this.#page}scroll(e){const t=e.target;if(t instanceof HTMLDivElement&&this.isShowing()){e.preventDefault(),e.stopImmediatePropagation();const s=this.#page.pageElement.style;s.left=`${t.scrollLeft}px`,s.top=`${t.scrollTop}px`}}keyDow(e){const t=e.key.toLowerCase();if("delete"===t&&e.shiftKey){const e=this.#imagesBoard.indexOf(this.#selectedImageBoard);-1!==e&&(this.#imagesBoard.splice(e,1).length>0&&(this.#selectedImageBoard=null),this.update2())}else" "===t&&(document.body.style.cursor="grabbing",this.#page.grabbing=this.#mouse.grabbing=!0)}keyUp(e){" "===e.key.toLowerCase()&&(document.body.style.cursor="default",this.#page.grabbing=this.#mouse.grabbing=!1)}mouseDown(e){const t=this.#mouse;if(this.selectImageBoard(),this.#selectedImageBoard){if(this.#leftEdge)return this.#leftEdge=!1,void this.update2();const s=this.#selectedImageBoard,i=t.x,o=t.y,n=this.#page.context2d;e.ctrlKey?this.drawRect(s.x1,s.y1,s.width,s.height):this.update2(),s.leftPath&&n.isPointInPath(s.leftPath,i,o)&&(this.#leftEdge=!0)}}doubleClick(e){const t=e.target;if(t instanceof HTMLCanvasElement){if(t.getAttribute("data-ld-src")!==this.#page.context2d.canvas.getAttribute("data-ld-src"))return;this.selectImageBoard();const e=this.#selectedImageBoard;if(e){this.#mouse.drag=!0,this.drawRect(e.x1,e.y1,e.width,e.height),document.body.style.cursor="move"}}}selectImageBoard(){const e=this.#mouse;for(let t=0,s=this.#imagesBoard.length;t<s;t++){const s=this.#imagesBoard[t],i=e.x,o=e.y;i>s.x1&&i<s.x1+s.width&&o>s.y1&&o<s.y1+s.height&&(this.#selectedImageBoard=s)}}mouseUp(e){const t=e.target;if(t instanceof HTMLCanvasElement){if(t.getAttribute("data-ld-src")!==this.#page.context2d.canvas.getAttribute("data-ld-src"))return;this.#mouse.drag=!1,document.body.style.cursor="default"}}mouseMove(e){const t=e.target;if(t instanceof HTMLCanvasElement){if(t.getAttribute("data-ld-src")!==this.#page.context2d.canvas.getAttribute("data-ld-src"))return;const s=this.#page.context2d.canvas.getBoundingClientRect(),i=e.x-s.x,o=e.y-s.y,n=this.#mouse;if(n.x=i,n.y=o,n.drag){if(this.#selectedImageBoard){const t=this.#selectedImageBoard;t.x1+=e.movementX,t.y1+=e.movementY,this.update2(),this.drawRect(t.x1,t.y1,t.width,t.height)}}else{if(this.#page.grabbing){const t=this.#page.pageElement,s=t.style;return s.left=`${t.offsetLeft+e.movementX}px`,void(s.top=`${t.offsetTop+e.movementY}px`)}const t=this.#selectedImageBoard;this.#leftEdge&&(t.width-=7*Math.sign(e.movementX),t.height-=7*Math.sign(e.movementX),this.update2(),this.drawRect(t.x1,t.y1,t.width,t.height))}}}update2(){this.isShowingGrid()?this.showGrid():this.hideGrid(),this.drawImage()}drawImage(){const e=this.#page.context2d;for(let t=0,s=this.#imagesBoard.length;t<s;t++){const s=this.#imagesBoard[t];e.drawImage(s,s.x1,s.y1,s.width,s.height)}}clear(){const e=this.#page.context2dLayer.canvas;this.#page.context2dLayer.clearRect(0,0,e.width,e.height)}attachImage(e){const t=new ImageBoard;t.load(e,(()=>{this.#imagesBoard.push(t),this.update2()}))}drawRect(e,t,s,i){const o=this.#page.context2d;o.save(),o.strokeRect(e,t,s,i);const n=new Path2D;this.#selectedImageBoard.leftPath=n,n.rect(e,t,32,32),n.closePath(),o.stroke(n),o.restore()}}class ImageBoard extends Image{constructor(e,t){super(e,t),this.x1=0,this.y1=0}load(e,t){this.onload=()=>{t()},this.src=e}}
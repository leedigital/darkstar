import ScreenCapture from"./ScreenCapture.js";export default class ScreenCaptureElectron extends ScreenCapture{constraints={audio:!1,video:{mandatory:{chromeMediaSource:"desktop"}}};constructor(){super()}async start(){if(!this.capture){this.capture=!0;const anchor=this.anchor;anchor.style.display="none";const enableCamera=this.enableCamera,{desktopCapturer:desktopCapturer}=require("electron");desktopCapturer.getSources({types:["window","screen"]}).then(async sources=>{for(const source of sources)if(source.name===document.title){const desktopMediaStream=await navigator.mediaDevices.getUserMedia(this.constraints),cameraAndAudioStream=await navigator.mediaDevices.getUserMedia({video:enableCamera,audio:{echoCancellation:!0}});this.video.srcObject=cameraAndAudioStream,this.video.muted=!0;const context=new AudioContext,destination=context.createMediaStreamDestination(),sourceAudio=context.createMediaStreamSource(cameraAndAudioStream),gain=context.createGain();gain.gain.value=1,sourceAudio.connect(gain).connect(destination);const tracks=[...desktopMediaStream.getVideoTracks(),...destination.stream.getAudioTracks()],stream=new MediaStream(tracks);this.mediaRecorder=new MediaRecorder(stream),stream.getVideoTracks()[0].onended=()=>{this.stop()};const chunks=[];this.mediaRecorder.ondataavailable=function(evt){chunks.push(evt.data)},this.mediaRecorder.onstop=()=>{console.log("stopping capture");let tracks=desktopMediaStream.getTracks();tracks.forEach(track=>track.stop()),tracks=cameraAndAudioStream.getTracks(),tracks.forEach(track=>track.stop()),this.video.srcObject=null;const blob=new Blob(chunks,{mimeType:"video/mp4"});chunks.length=0,anchor.href=window.URL.createObjectURL(blob),anchor.download="video.mp4",anchor.click(),this.mediaRecorder=null},this.mediaRecorder.onpause=()=>{this.paused=!0},this.mediaRecorder.onresume=()=>{this.paused=!1},this.mediaRecorder.start();break}})}}}